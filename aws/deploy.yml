AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to build an AWS Lambda function with a deployment URL and rate limiting.

Parameters:
  lambdaFunctionName:
    Type: String
    AllowedPattern: '[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+'
    Default: GetImages
  lambdaHTTPMethod:
    Type: String
    Default: GET
  mongoToken:
    Type: String
    NoEcho: true

Resources:
  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: aws.zip
      Description: Get images by date
      FunctionName: !Ref lambdaFunctionName
      Handler: index.handler
      Role: !GetAtt lambdaIAMRole.Arn
      Runtime: python3.12
      Environment:
        Variables:
          MONGO_TOKEN: !Ref mongoToken
      # Employs a rate limiting scheme of ~10, which is what the default is on account level, so this is not needed
      # ReservedConcurrentExecutions: 10

  lambdaFunctionUrl:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !GetAtt lambdaFunction.Arn
      Cors:
        AllowOrigins:
          - "*"
        AllowMethods:
          - !Ref lambdaHTTPMethod

  lambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref lambdaFunctionName
      Principal: '*'
      FunctionUrlAuthType: NONE

  lambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${lambdaFunctionName}:*
          PolicyName: lambda

  lambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${lambdaFunctionName}
      RetentionInDays: 90

Outputs:
  lambdaInvokeURL:
    Description: The URL to invoke the Lambda function directly
    Value: !GetAtt lambdaFunctionUrl.FunctionUrl